# find beginning of java class, save out shell script and java class separately.

ds= getDataSet('bin.file:///net/spot3/home/jbf/incoming/netbeans-6.5rc2-ml-linux.sh?byteLength=10000000' )

from org.virbo.dataset import AbstractDataSet
class FilterDataSet(AbstractDataSet):
   def value( self, i ):
      return ds.value(i)==0xCA and ds.value(i+1)==0xFE and ds.value(i+2)==0xBA and ds.value(i+3)==0xBE
   def length(self):
      return ds.length()-4
   def rank(self):
      return 1

fds= FilterDataSet()

print 'starting where command...'
# this is slow because of all the jython overhead.  Better to make some callable
r= where( fds )

index= int(r.value(0))

print 'Index is at ', index
print 'All indeces: ', r

ds.putProperty( QDataSet.DEPEND_0, None )
formatDataSet( ds[0:index], 'bin.file:///home/jbf/temp/installer.sh?type=ubyte' )

print 'done writing shell script part' 

print 'getting the binary part of the file'
ds= getDataSet('bin.file:///net/spot3/home/jbf/incoming/netbeans-6.5rc2-ml-linux.sh?byteOffset=%d' % index )

print 'writing the binary part...'
ds.putProperty( QDataSet.DEPEND_0, None )
#formatDataSet( ds, 'bin.file:///home/jbf/temp/installer.class?type=ubyte' )

print 'done'

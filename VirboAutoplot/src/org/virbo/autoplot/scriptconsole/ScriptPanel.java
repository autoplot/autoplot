/*
 * ScriptPanel.java
 *
 * Created on April 28, 2008, 11:06 AM
 */

package org.virbo.autoplot.scriptconsole;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.OutputStream;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import org.das2.util.filesystem.WebFileSystem;
import org.das2.util.monitor.NullProgressMonitor;
import org.virbo.autoplot.ApplicationModel;
import org.virbo.datasource.DataSetURL;

/**
 *
 * @author  jbf
 */
public class ScriptPanel extends javax.swing.JPanel {

    File file;
    ApplicationModel model;
    
    /** Creates new form ScriptPanel */
    public ScriptPanel( final ApplicationModel model ) {
        initComponents();
        this.model= model;
        model.addPropertyChangeListener( new PropertyChangeListener() {
            public void propertyChange(PropertyChangeEvent evt) {
                if ( evt.getPropertyName().equals( ApplicationModel.PROPERTY_DATASOURCE ) ) {
                    try {
                        String sfile= model.dataSource().getURL();
                        DataSetURL.URLSplit split= DataSetURL.parse(sfile);
                        if ( !( split.file.endsWith(".py") || split.file.endsWith(".jy") ) ) {
                            return;
                        }
                        file = DataSetURL.getFile(new URL(model.dataSource().getURL()), new NullProgressMonitor());
                        StringBuffer buf= new StringBuffer();
                        BufferedReader r= new BufferedReader( new FileReader( file ) );
                        String s= r.readLine();
                        while ( s!=null ) {
                            buf.append(s+"\n");
                            s= r.readLine();
                        }
                        editorPanel.setText( buf.toString() );
                    } catch (IOException ex) {
                        Logger.getLogger(ScriptPanel.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    
                }
            }
        } );
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        editorPanel = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        savePlotButton = new javax.swing.JButton();

        jScrollPane1.setViewportView(editorPanel);

        jLabel1.setText("Jython>");

        jScrollPane2.setViewportView(jTextPane2);

        savePlotButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/virbo/autoplot/go.png"))); // NOI18N
        savePlotButton.setText("save & plot");
        savePlotButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePlotButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(10, 10, 10)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
                .addGap(4, 4, 4))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 444, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(savePlotButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(savePlotButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

private void savePlotButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savePlotButtonActionPerformed
    try {
        boolean updateSurl= false;
        String text = editorPanel.getText();
        if ( file==null || file.getCanonicalPath().startsWith( WebFileSystem.getDownloadDirectory().toString() ) ) {
            JFileChooser chooser= new JFileChooser();
            int r= chooser.showSaveDialog(this);
            if ( r==JFileChooser.APPROVE_OPTION ) {
                file= chooser.getSelectedFile();
                updateSurl= true;
            }
        }
        OutputStream out = new FileOutputStream(file);
        out.write(text.getBytes());
        out.close();
        if ( updateSurl ) {
            model.setDataSourceURL(file.toString());
        } else {
            model.update();
        }
    } catch (IOException iOException) {
        model.getCanvas().getApplication().getExceptionHandler().handle(iOException);
    }
}//GEN-LAST:event_savePlotButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane editorPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JButton savePlotButton;
    // End of variables declaration//GEN-END:variables

    public javax.swing.JTextPane getEditorPanel() {
        return editorPanel;
    }

}

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.autoplot.inline;

import java.awt.Window;
import java.util.List;
import javax.swing.DefaultCellEditor;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.TableModel;
import org.das2.components.propertyeditor.PropertyEditorAdapter;
import org.das2.util.LoggerManager;
import org.das2.util.monitor.ProgressMonitor;
import org.virbo.datasource.DataSourceEditorPanel;
import org.virbo.dsutil.QDataSetTableModel;
import org.virbo.jythonsupport.ui.ScriptPanelSupport;

/**
 *
 * @author jbf
 */
public class InlineDataSourceEditorPanel extends javax.swing.JPanel implements DataSourceEditorPanel {

    /**
     * Creates new form InlineDataSourceEditorPanel
     */
    public InlineDataSourceEditorPanel() {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        schemeComboBox = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        examples = new javax.swing.JComboBox();

        jTabbedPane1.setToolTipText("jython tab allows short scripts to be constructed");
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        schemeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Event List" }));
        schemeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                schemeComboBoxActionPerformed(evt);
            }
        });

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table);

        jButton1.setText("Add");
        jButton1.setToolTipText("Add a record");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Delete Selected");
        jButton2.setToolTipText("Delete selected records");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(schemeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 11, Short.MAX_VALUE)
                                .addComponent(jButton2)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(schemeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(0, 197, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("data", jPanel1);

        jScrollPane2.setViewportView(jTextPane1);

        jLabel1.setText("<html>Enter lines of jython assignments and expressions.  Expressions are interpreted as the X values, then Y values, then Z values if specified.");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        examples.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ex1", "ex2" }));
        examples.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                examplesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addComponent(examples, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(examples, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("jython", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        LoggerManager.logGuiEvent(evt);
        JTextField tf= new JTextField();
        if ( JOptionPane.showConfirmDialog(schemeComboBox,tf,"Enter Data Point", JOptionPane.OK_CANCEL_OPTION)==JOptionPane.OK_OPTION ) {
            String sval= tf.getText();
            String[] ss= new String[tm.getRowCount()+1];
            for ( int i=0; i<tm.getRowCount(); i++ ) {
                ss[i]= (String)tm.getValueAt(i,0);
            }
            ss[tm.getRowCount()]= sval;
            tm= toTableModel(ss);
            table.setModel( tm );
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        LoggerManager.logGuiEvent(evt);
        int[] rows= table.getSelectedRows();
        String[] ss= new String[tm.getRowCount()-rows.length];
        
        int irow= 0;
        int j= 0;
        
        if ( rows.length==0 ) {
            return;
        }
        
        for ( int i=0; i<tm.getRowCount(); i++ ) {
            if ( rows[irow]==i ) {
                irow++;
            } else {
                ss[j]= (String)tm.getValueAt(i,0);
                j++;
            }
        }
        tm= toTableModel(ss);
        table.setModel( tm );
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        LoggerManager.logGuiEvent(evt);
        if ( jTabbedPane1.getSelectedIndex()==0 ) {
            if ( tm==null ) {
                tm= toTableModel( new String[0] );
            }
        }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void schemeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_schemeComboBoxActionPerformed
        LoggerManager.logGuiEvent(evt);
        if ( schemeComboBox.getSelectedIndex()==0 ) {
            tm= toTableModel( new String[0] );
        }
    }//GEN-LAST:event_schemeComboBoxActionPerformed

    private void examplesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_examplesActionPerformed
        if ( examples.getSelectedIndex()==0 ) {
            tf.setText("linspace(0,5*PI,100)\nt&sin(linspace(0,5*PI,100))");
        } else if ( examples.getSelectedIndex()==1 ) {
            tf.setText("t=linspace(0,5*PI,100)\nt&sin(t)");
        }
    }//GEN-LAST:event_examplesActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox examples;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JComboBox schemeComboBox;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables

    TableModel tm;
    String text;
    JTextField tf;
    
    @Override
    public boolean reject(String uri) throws Exception {
        return false;
    }

    @Override
    public boolean prepare(String uri, Window parent, ProgressMonitor mon) throws Exception {
        return true;
    }

    private static TableModel toTableModel( final String[] s ) {
         TableModel   tm= new AbstractTableModel() {

                @Override
                public int getRowCount() {
                    return s.length;
                }

                @Override
                public int getColumnCount() {
                    return 1;
                }

                @Override
                public Object getValueAt(int rowIndex, int columnIndex) {
                    return s[rowIndex];
                }
            };
        return tm;
    }
    
    @Override
    public void setURI(String uri) {
        if ( uri.startsWith("vap+inline:") ) {
            uri= uri.substring(11);
        }
        if ( uri.length()>0 && Character.isDigit( uri.charAt(0) ) ) {
            int amp= uri.indexOf("&");
            if ( amp==-1 ) amp= uri.length();
            String lit= uri.substring(0,amp);
            String[] ss= lit.split(",");
            this.tm= toTableModel(ss);
        } else {
            String[] ss= uri.split("&");
            StringBuilder t= new StringBuilder();
            for ( int i=0; i<ss.length; i++ ) {
                if ( i>0 ) t.append("\n");
                t.append(ss[i]);
            }
            text= t.toString();
        }
    }

    @Override
    public void markProblems(List<String> problems) {
        
    }

    @Override
    public JPanel getPanel() {
        initComponents();
        if ( text!=null ) jTextPane1.setText(text);
        if ( tm!=null ) {
            this.table.setModel(tm);
            tf= new JTextField();
            tf.setEditable(true);
            this.table.setCellEditor(new DefaultCellEditor(tf) );
            
            
            PropertyEditorAdapter editor = new PropertyEditorAdapter();
            int cellHeight = 21;  // c.getPreferredSize().height;

            table.setRowHeight( cellHeight );
            table.setDefaultEditor( Object.class, editor );            
        } else {
            this.jTabbedPane1.setSelectedIndex(1);
        }
        return this;
    }

    @Override
    public String getURI() {
        if ( jTabbedPane1.getSelectedIndex()==0 ) {
            StringBuilder s= new StringBuilder( "vap+inline:" );
            for ( int i=0; i<tm.getRowCount(); i++ ) {
                if ( i>0 ) s.append(",");
                s.append(tm.getValueAt(i,0));
            }
            s.append("&RENDER_TYPE=eventsBar");
            return s.toString();
        } else {
            StringBuilder s= new StringBuilder( "vap+inline:" );
            String t= jTextPane1.getText();
            String[] ss= t.split("\n");
            for ( int i=0; i<ss.length; i++ ) {
                if ( i>0 ) s.append("&");
                s.append(ss[i]);
            }
            return s.toString();
        }
    }
    
    public static void main( String[] args ) {
        //String uri= "vap+inline:ripples(20,20)";
        String uri= "vap+inline:20,30,40";
        DataSourceEditorPanel ds= new InlineDataSourceEditorPanel();
        ds.setURI(uri);
        if ( JOptionPane.OK_OPTION== JOptionPane.showConfirmDialog( null, ds.getPanel(), "Test Inline Editor", JOptionPane.OK_CANCEL_OPTION ) ) {
            System.err.println(ds.getURI());
        }
        
    }
}

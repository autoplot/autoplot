/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.virbo.ascii;

import edu.uiowa.physics.pw.das.datum.Units;
import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Date;
import org.das2.util.monitor.ProgressMonitor;
import org.virbo.dataset.QDataSet;
import org.virbo.datasource.datasource.DataSourceFormat;

/**
 * Format the QDataSet into Ascii tables.  
 * @author jbf
 */
public class AsciiTableDataSourceFormat implements DataSourceFormat {

    private void maybeOutputProperty(PrintWriter out, QDataSet data, String property) {
        Object v = data.property(property);
        if (v != null) {
            out.println("# " + property + ": " + v);
        }
    }

    private void formatRank2(PrintWriter out, QDataSet data, ProgressMonitor mon) {
        out.println("# Generated by Autoplot on " + new Date());
        maybeOutputProperty(out, data, QDataSet.TITLE);
        QDataSet dep1 = (QDataSet) data.property(QDataSet.DEPEND_1);
        QDataSet dep0 = (QDataSet) data.property(QDataSet.DEPEND_0);
        if (dep1 != null) {
            out.print("#");
            if (dep0 != null) {
                String l = (String) dep0.property(QDataSet.LABEL);
                out.print(" " + (l == null ? "dep0" : l) + ", ");
            }
            Units u = (Units) dep1.property(QDataSet.UNITS);
            if (u == null) {
                u = Units.dimensionless;
            }
            int i;
            for (  i = 0; i < dep1.length()-1; i++) {
                out.print(u == null ? "" + dep1.value(i) : u.createDatum(dep1.value(i)) + ", " );
            }
            out.println(u == null ? "" + dep1.value(i) : u.createDatum(dep1.value(i)) );
        }

        Units u0 = null;
        if (dep0 != null) {
            u0 = (Units) dep0.property(QDataSet.UNITS);
            if (u0 == null) {
                u0 = Units.dimensionless;
            }
        }

        Units u = (Units) data.property(QDataSet.UNITS);

        mon.setTaskSize(data.length());
        mon.started();
        
        for (int i = 0; i < data.length(); i++) {
            mon.setTaskProgress(i);
            if ( mon.isCancelled() ) break;
            if (dep0 != null) {
                out.print("" + u0.createDatum(dep0.value(i)) + ", ");
            }

            int j;
            for ( j = 0; j < data.length(i) - 1; j++) {
                out.print(u.createDatum(data.value(i, j)) + ", ");
            }
            out.println(u.createDatum(data.value(i, j)));
        }
        mon.finished();
    }

    private void formatRank1(PrintWriter out, QDataSet data, ProgressMonitor mon) {
        out.println("# Generated by Autoplot on " + new Date());
        maybeOutputProperty(out, data, QDataSet.TITLE);

        QDataSet dep0 = (QDataSet) data.property(QDataSet.DEPEND_0);

        out.print("#");
        if (dep0 != null) {
            String l = (String) dep0.property(QDataSet.LABEL);
            out.print(" " + (l == null ? "dep0" : l));
        }

        {
            String l = (String) dep0.property(QDataSet.LABEL);
            out.println(" " + (l == null ? "data" : l));
        }

        Units u0 = null;
        if (dep0 != null) {
            u0 = (Units) dep0.property(QDataSet.UNITS);
            if (u0 == null) {
                u0 = Units.dimensionless;
            }
        }
        Units u = (Units) data.property(QDataSet.UNITS);
        
        mon.setTaskSize(data.length());
        mon.started();
        
        for (int i = 0; i < data.length(); i++ ) {
            mon.setTaskProgress(i);
            if ( mon.isCancelled() ) break;
            
            if (dep0 != null) {
                out.print("" + u0.createDatum(dep0.value(i)) + ", ");
            }

            out.println( u.createDatum(data.value(i)));
        }
        mon.finished();
    }

    public void formatData(File url, java.util.Map<String,String> params, QDataSet data, ProgressMonitor mon) throws IOException {
        PrintWriter out = new PrintWriter(url);
        if (data.rank() == 2) {
            formatRank2(out, data, mon);
        } else if (data.rank() == 1) {
            formatRank1(out, data, mon);
        }
        out.close();
    }
}

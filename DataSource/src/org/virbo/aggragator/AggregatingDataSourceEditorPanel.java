/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * AggregatingDataSourceEditorPanel.java
 *
 * Created on Apr 22, 2009, 8:37:48 AM
 */

package org.virbo.aggragator;

import java.awt.BorderLayout;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JPanel;
import org.virbo.datasource.DataSetSelector;
import org.virbo.datasource.DataSetURL;
import org.virbo.datasource.DataSourceEditorPanel;
import org.virbo.datasource.DataSourceEditorPanelUtil;
import org.virbo.datasource.URLSplit;

/**
 *
 * @author jbf
 */
public class AggregatingDataSourceEditorPanel extends javax.swing.JPanel implements DataSourceEditorPanel {

    /** Creates new form AggregatingDataSourceEditorPanel */
    public AggregatingDataSourceEditorPanel() {
        initComponents();
    }


    public void setDelegateEditorPanel(DataSourceEditorPanel edit) {
        delegateEditorPanel= edit;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        delegatePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        timeRangeTextField = new javax.swing.JTextField();

        delegatePanel.setLayout(new java.awt.BorderLayout());

        jLabel1.setText("timeRange:");
        jLabel1.setToolTipText("enter the time range to aggregate over.  Data from files within this range will be combined by concatenating over the first dimension.\n");

        timeRangeTextField.setText("jTextField1");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel1)
                .add(18, 18, 18)
                .add(timeRangeTextField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE)
                .addContainerGap())
            .add(delegatePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(delegatePanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(timeRangeTextField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel1)))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel delegatePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField timeRangeTextField;
    // End of variables declaration//GEN-END:variables

    public JPanel getPanel() {
        return this;
    }


    JComponent delegateComponent = null;
    DataSetSelector delegateDataSetSelector=null;
    DataSourceEditorPanel delegateEditorPanel= null;
    URLSplit split;
    Map<String,String> params;

    private void setDelegateComponent(JComponent c) {
        if (delegateComponent != null) {
            delegatePanel.remove(delegateComponent);
        }
        delegateComponent = c;
        delegatePanel.add(c, BorderLayout.CENTER);
        delegatePanel.validate();
    }

    public void setUrl(String url) {
        split= URLSplit.parse(url);
        params= URLSplit.parseParams(split.params);

        try {

            timeRangeTextField.setText( params.get("timerange") );

            String delegateUrl = AggregatingDataSourceFactory.getDelegateDataSourceFactoryUrl(url);
            if ( delegateEditorPanel==null ) {
                delegateEditorPanel = DataSourceEditorPanelUtil.getDataSourceEditorPanel(new URI(delegateUrl));
            }
            if ( delegateEditorPanel==null ) {
                JPanel delegateP= new JPanel(new BorderLayout());
                delegateDataSetSelector= new DataSetSelector();
                delegateDataSetSelector.setValue(delegateUrl);
                delegateP.add(delegateDataSetSelector,BorderLayout.SOUTH );
                setDelegateComponent(delegateP);
            } else {
                delegateEditorPanel.setUrl(delegateUrl);
                setDelegateComponent(delegateEditorPanel.getPanel());
            }

        } catch (URISyntaxException ex) {
            Logger.getLogger(AggregatingDataSourceEditorPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(AggregatingDataSourceEditorPanel.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalArgumentException ex) {
            Logger.getLogger(AggregatingDataSourceEditorPanel.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public String getUrl() {
        String delegateUrl;
        if ( delegateEditorPanel!=null ) {
            delegateUrl= delegateEditorPanel.getUrl();
        } else {
            delegateUrl= delegateDataSetSelector.getValue();
        }
        URLSplit dsplit= URLSplit.parse(delegateUrl);
        Map<String,String> allParams= new LinkedHashMap<String,String>();
        allParams.putAll( params );
        allParams.putAll( URLSplit.parseParams(dsplit.params) );
        allParams.put( "timerange", timeRangeTextField.getText() );
        split.params= URLSplit.formatParams(allParams);
        return URLSplit.format(split);
    }

}
